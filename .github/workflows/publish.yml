name: Publish

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      config-path:
        required: false
        type: string

jobs:
  publish:
    name: Publish PyPi and Github Release
    environment: production
    runs-on: ubuntu-latest
    env:
      GIT_PUSH: "false"
      PYPI_NAME: ${{ vars.PYPI_NAME }}
      PYPI_VERSION: ${{ vars.PYPI_VERSION }}
      SEMAPHORE_VERSION: ${{ vars.SEMAPHORE_VERSION }}
      PYPI_PUBLISH: ${{ vars.PYPI_PUBLISH }}
    
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write 
       # IMPORTANT: (id-token) this permission is mandatory for trusted publishing
       
    steps:
    - uses: actions/checkout@v4

    - name: Publish package
      if: env.PYPI_PUBLISH == 'true'
      uses: pypa/gh-action-pypi-publish@v1.8.11
      with:
        skip-existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    
    - name: Create Github Tag
      if: 2 == 3
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |        
          github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${{env.PYPI_VERSION}}`,
              sha: context.sha
          })

    - name: Create Github Release
      id: create_release
      uses: actions/create-release@latest
      env:
        # secrets.GITHUB_TOKEN - This token is provided by Actions, you do not need to create your own token
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: v${{env.PYPI_VERSION}}
        release_name: v${{env.PYPI_VERSION}}
        body: |
          Changes in this Release
          - Ref to Ansible-Semaphore Release Notes [v${{env.PYPI_VERSION}}](https://github.com/ansible-semaphore/semaphore/releases/tag/v${{env.PYPI_VERSION}})
        draft: false
        prerelease: false

    - name: Print Github Release
      run: |
        echo "ID: ${{ steps.create_release.outputs.id }}"

    - name: Publish distribution ðŸ“¦ to Github Release v${{env.PYPI_VERSION}}
      uses: xresloader/upload-to-github-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/*"
        release_id: ${{ steps.create_release.outputs.id }}
        overwrite: true
        #verbose: true
  