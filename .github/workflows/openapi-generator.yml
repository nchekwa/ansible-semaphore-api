name: Generate OpenAPI

on:
  push:
    branches:
      - main
    paths:
      - 'variable.env'
      - '.github/workflows/openapi-generator.yml'

jobs:
  ### Generate OpenAPI ######################################################
  generate_openapi:
    runs-on: ubuntu-latest
    env:
      GITHUB_CHANGES: "false"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'main'

      - name: Set Git Config
        run: |
          git config --global user.email "autogen@nchekwa.com"
          git config --global user.name "OpenAPI Autogen"
  
      - name: Check if openapi-autogen exists and remove if present
        run: |
          if git show-ref --quiet refs/heads/openapi-autogen; then
              git branch -D openapi-autogen
          fi

      - name: Recreate openapi-autogen based on main
        run: |
          git checkout main
          git checkout -b openapi-autogen

      - name: Switch to openapi-autogen branch
        run: |
          git checkout openapi-autogen

          
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'openapi-autogen'

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Read variable.env and set variable
        id: read-version
        run: |
          cat variable.env >> "$GITHUB_ENV"
          echo "CI_PROJECT_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
 
      - name: Set up OpenAPI Generator
        run: |
          wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.1.0/openapi-generator-cli-7.1.0.jar -O /tmp/openapi-generator-cli.jar

      - name: OpenAPI Download Ansible Semaphore API-Docs
        run: |
          OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
          REPOSITORY=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
          cd /tmp/
          curl "https://converter.swagger.io/api/convert?url=https://raw.githubusercontent.com/ansible-semaphore/semaphore/v$SEMAPHORE_VERSION/api-docs.yml" -H "Accept: application/yaml" -o api-docs.yml
          
      - name: OpenAPI Extract Python Template
        run: |
          cd /tmp/ &&
          java -jar /tmp/openapi-generator-cli.jar author template \
            -g python \
            -o templates/python

      - name: Apply Patch on Python Template
        run: |
          patch -p1 /tmp/templates/python/api_client.mustache < $CI_PROJECT_DIR/patch/api_client.mustache.patch
          
      - name: OpenAPI Generate
        run: |
          cd /tmp/ &&
          java -jar /tmp/openapi-generator-cli.jar generate \
            -i api-docs.yml \
            -g python \
            -t templates/python \
            -o openapi \
            --package-name $PYPI_NAME \
            --git-repo-id $REPOSITORY \
            --git-user-id $OWNER
        
      - name: Update repository
        run: |
          cd $CI_PROJECT_DIR
          rm -fR $CI_PROJECT_DIR/$PYPI_NAME && cp -r /tmp/openapi/$PYPI_NAME $CI_PROJECT_DIR/
          rm -fR $CI_PROJECT_DIR/docs && cp -r /tmp/openapi/docs $CI_PROJECT_DIR/
          rm -fR $CI_PROJECT_DIR/test && cp -r /tmp/openapi/test $CI_PROJECT_DIR/
          cp /tmp/openapi/README.md $CI_PROJECT_DIR/README_OPENAPI.md
          ls -la $CI_PROJECT_DIR/
          #echo -e "include ../requirements.txt\ninclude py.typed" > $CI_PROJECT_DIR/$PYPI_NAME/MANIFEST.in
          
      - name: Check for changes
        id: check_changes
        run: |
          cd $CI_PROJECT_DIR
          echo "GITHUB_CHANGES=false" >> $GITHUB_ENV
          
          if git status --porcelain | grep -q '^??'; then
            echo "Git Status: Untracked files found. Adding them to the staging area."
            echo "GITHUB_CHANGES=true" >> $GITHUB_ENV
          elif git status --porcelain | grep -q '^\s*D'; then
            echo "Git Status: Deleted files found. Perform actions for deleted files."
            echo "GITHUB_CHANGES=true" >> $GITHUB_ENV
          else
            echo "Git Status: No untracked or deleted files."
          fi

          if ! git diff --quiet; then
              echo "Git Files Diff: Changes detected in some files, proceeding with commit."
              echo "GITHUB_CHANGES=true" >> $GITHUB_ENV
          else
              echo "Git Files Diff: No differences found between the working directory and the staging area."      
          fi

      - name: Commit changes
        if: env.GITHUB_CHANGES == 'true'
        run: |
          git config --local user.name actions-user
          git config --local user.email "github@nchekwa.com"
          git status
          git add --all
          git commit -am "GitHub Actions OpenAPI Update $(date +"%Y-%m-%d %H:%M:%S")"
          #git push -f origin main
          git push -f

    outputs:
      github_changes: ${{ env.GITHUB_CHANGES }}