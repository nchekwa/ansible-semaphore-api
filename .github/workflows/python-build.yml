
  ### BUILD ######################################################
  build:
    runs-on: ubuntu-latest
    needs: test
    env:
      GITHUB_CHANGES: "false"
    if:  ${{ needs.test.outputs.github_build == 'true' }}
    permissions:
      actions: write
      contents: write
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH }}

    - name: Read variable.env and set variable
      id: read-version
      run: |
        cat variable.env >> "$GITHUB_ENV"
        echo "CI_PROJECT_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -U setuptools wheel build

    - name: Cleanup dist/ folder before build
      run: rm -rf dist/

    - name: Build package
      run: |
        formatted_requirements=$(sed 's/.*/"&"/; $!s/$/, /' requirements.txt | tr -d '\n')
        sed -i.bak "s/__inject_requirements__/${formatted_requirements}/" setup.py
        python -m build

    - name: Count generated files in dist/ folder
      id: file_count
      run: |
          echo "GITHUB_CHANGES=false" >> $GITHUB_ENV
          FILE_COUNT=$(ls -1 $CI_PROJECT_DIR/dist/ | wc -l)
          echo "Number of files in dist folder: $FILE_COUNT"
          if [ $((FILE_COUNT)) -gt 0 ]; then
            echo "New dist/ file generated."
            ls -l $CI_PROJECT_DIR/dist
            echo "GITHUB_CHANGES=true" >> $GITHUB_ENV
          else
            echo "No new files generated."
            exit 0
          fi

    - name: Commit changes
      if: env.GITHUB_CHANGES == 'true'
      run: |
          git config --local user.name actions-user
          git config --local user.email "github@nchekwa.com"
          git status
          git add dist/*
          git commit -am "GitHub Actions PyPi Update $(date +"%Y-%m-%d %H:%M:%S")"
          git push -f 


    - name: Create Pull Request
      # https://github.com/peter-evans/create-pull-request
      id: cpr
      uses: peter-evans/create-pull-request@v5
      with:
        add-paths: |
          semaphore_api/
          test/
          docs/
          dist/
        token: ${{ secrets.GITHUB_TOKEN }} 
        commit-message: Update report
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: main
        delete-branch: false
        title: 'New Code Generated'
        body: |
          New Code Generated
          - Updated with *today's* date
          - Auto-generated 
        labels: |
          report
          automated pr
        assignees: azdolinski
        reviewers: azdolinski
        team-reviewers: |
          developers
          qa-team
        milestone: 1
        draft: false


    outputs:
      github_changes: ${{ env.GITHUB_CHANGES }}
      